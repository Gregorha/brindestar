{"ast":null,"code":"var _jsxFileName = \"/home/gregorhammerschmittandrade/projetos/brindestar/next_version/frontend/pages/product-details/product/leftImagePage.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useContext, useState, useRef, useEffect } from 'react';\nimport { Container, Row, Col, Media } from 'reactstrap';\nimport DetailsWithPrice from '../common/detail-price';\nimport Slider from 'react-slick';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport CartContext from '../../../helpers/cart';\nimport ImageZoom from '../common/image-zoom';\nimport { CurrencyContext } from '../../../helpers/Currency/CurrencyContext';\nconst GET_SINGLE_PRODUCTS = gql`\n    query product ($id:Int!) {\n        product (id:$id) {\n            id\n            title\n            description\n            type\n            brand\n            category \n            price\n            new\n            sale\n            discount\n            stock\n            variants\n            {\n                id\n                color\n                image_id\n                variant_id\n                size\n            }\n            images\n            {\n                image_id\n                src\n            }\n        }\n    }\n`;\n\nconst LeftImagePage = () => {\n  const context = useContext(CartContext);\n  const addToCart = context.addToCart;\n  const curContext = useContext(CurrencyContext);\n  const symbol = curContext.state.symbol;\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    nav1: null,\n    nav2: null\n  });\n  const slider1 = useRef();\n  const slider2 = useRef();\n  var {\n    loading,\n    data\n  } = useQuery(GET_SINGLE_PRODUCTS, {\n    variables: {\n      id: 1\n    }\n  });\n  var products = {\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    dots: false,\n    arrows: true,\n    fade: true,\n    infinite: false\n  };\n  var productsnav = {\n    slidesToShow: 3,\n    swipeToSlide: true,\n    arrows: false,\n    dots: false,\n    vertical: true,\n    focusOnSelect: true,\n    infinite: false\n  };\n  useEffect(() => {\n    setState({\n      nav1: slider1.current,\n      nav2: slider2.current\n    });\n  }, [data]);\n\n  const changeColorVar = img_id => {\n    slider2.current.slickGoTo(img_id);\n  };\n\n  const {\n    nav1,\n    nav2\n  } = state;\n  return __jsx(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"collection-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, !data || !data.product || data.product.length === 0 || loading ? 'loading' : __jsx(Row, {\n    className: \"leftImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, __jsx(Col, {\n    lg: \"1\",\n    sm: \"2\",\n    xs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 33\n    }\n  }, __jsx(Slider, _extends({\n    className: \"slider-nav\"\n  }, productsnav, {\n    asNavFor: nav1,\n    ref: slider => slider2.current = slider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 37\n    }\n  }), data.product.variants ? data.product.images.map((vari, index) => __jsx(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 49\n    }\n  }, __jsx(Media, {\n    src: `${vari.src}`,\n    key: index,\n    alt: vari.alt,\n    className: \"img-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 53\n    }\n  }))) : ''))), __jsx(Col, {\n    lg: \"5\",\n    sm: \"10\",\n    xs: \"12\",\n    className: \"order-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  }, __jsx(Slider, _extends({}, products, {\n    asNavFor: nav2,\n    ref: slider => slider1.current = slider,\n    className: \"product-right-slick\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 33\n    }\n  }), data.product.variants ? data.product.images.map((vari, index) => __jsx(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 45\n    }\n  }, __jsx(ImageZoom, {\n    image: vari,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 49\n    }\n  }))) : data.product.images.map((vari, index) => __jsx(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 45\n    }\n  }, __jsx(ImageZoom, {\n    image: vari,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 49\n    }\n  }))))), __jsx(Col, {\n    lg: \"6\",\n    className: \"rtl-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 29\n    }\n  }, __jsx(DetailsWithPrice, {\n    symbol: symbol,\n    item: data.product,\n    changeColorVar: changeColorVar,\n    navOne: state.nav1,\n    addToCartClicked: addToCart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 33\n    }\n  }))))));\n};\n\nexport default LeftImagePage;","map":{"version":3,"sources":["/home/gregorhammerschmittandrade/projetos/brindestar/next_version/frontend/pages/product-details/product/leftImagePage.js"],"names":["React","useContext","useState","useRef","useEffect","Container","Row","Col","Media","DetailsWithPrice","Slider","gql","useQuery","CartContext","ImageZoom","CurrencyContext","GET_SINGLE_PRODUCTS","LeftImagePage","context","addToCart","curContext","symbol","state","setState","nav1","nav2","slider1","slider2","loading","data","variables","id","products","slidesToShow","slidesToScroll","dots","arrows","fade","infinite","productsnav","swipeToSlide","vertical","focusOnSelect","current","changeColorVar","img_id","slickGoTo","product","length","slider","variants","images","map","vari","index","src","alt"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useRef ,useEffect} from 'react';\r\nimport { Container, Row, Col ,Media} from 'reactstrap';\r\nimport DetailsWithPrice from '../common/detail-price';\r\nimport Slider from 'react-slick';\r\nimport gql from 'graphql-tag';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport CartContext from '../../../helpers/cart';\r\nimport ImageZoom from '../common/image-zoom';\r\nimport { CurrencyContext } from '../../../helpers/Currency/CurrencyContext';\r\n\r\nconst GET_SINGLE_PRODUCTS = gql`\r\n    query product ($id:Int!) {\r\n        product (id:$id) {\r\n            id\r\n            title\r\n            description\r\n            type\r\n            brand\r\n            category \r\n            price\r\n            new\r\n            sale\r\n            discount\r\n            stock\r\n            variants\r\n            {\r\n                id\r\n                color\r\n                image_id\r\n                variant_id\r\n                size\r\n            }\r\n            images\r\n            {\r\n                image_id\r\n                src\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst LeftImagePage = () => {\r\n\r\n    const context = useContext(CartContext);\r\n    const addToCart = context.addToCart;\r\n    const curContext = useContext(CurrencyContext);\r\n    const symbol = curContext.state.symbol;\r\n    const [state, setState] = useState({ nav1: null, nav2: null });\r\n    const slider1 = useRef();\r\n    const slider2 = useRef();\r\n    var { loading, data } = useQuery(GET_SINGLE_PRODUCTS, {\r\n        variables: {\r\n            id: 1\r\n        }\r\n    });\r\n    var products = {\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        dots: false,\r\n        arrows: true,\r\n        fade: true,\r\n        infinite: false\r\n    };\r\n    var productsnav = {\r\n        slidesToShow: 3,\r\n        swipeToSlide: true,\r\n        arrows: false,\r\n        dots: false,\r\n        vertical:true,\r\n        focusOnSelect: true,\r\n        infinite: false\r\n    };\r\n\r\n    useEffect(() => {\r\n        setState({\r\n            nav1: slider1.current,\r\n            nav2: slider2.current\r\n        });\r\n    }, [data]);\r\n\r\n    const changeColorVar = (img_id) => {\r\n        slider2.current.slickGoTo(img_id)\r\n    }\r\n\r\n    const { nav1, nav2 } = state;\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"collection-wrapper\">\r\n                <Container>\r\n                    {(!data || !data.product || data.product.length === 0 || loading) ?\r\n                        'loading'\r\n                        :\r\n                        <Row className=\"leftImage\">\r\n                            <Col lg=\"1\" sm=\"2\" xs=\"12\" >\r\n                                <Row>\r\n                                    <Slider className=\"slider-nav\"\r\n                                        {...productsnav}\r\n                                        asNavFor={nav1}\r\n                                        ref={slider => (slider2.current = slider)}\r\n                                    >\r\n                                        {data.product.variants ?\r\n                                            data.product.images.map((vari, index) =>\r\n                                                <div key={index}>\r\n                                                    <Media src={`${vari.src}`} key={index} alt={vari.alt} className=\"img-fluid\" />\r\n                                                </div>\r\n                                            ) :\r\n                                            ''}\r\n                                    </Slider>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col lg=\"5\" sm=\"10\" xs=\"12\" className=\"order-up\">\r\n                                <Slider {...products} asNavFor={nav2} ref={slider => (slider1.current = slider)} className=\"product-right-slick\">\r\n                                    {data.product.variants ?\r\n                                        data.product.images.map((vari, index) =>\r\n                                            <div key={index}>\r\n                                                <ImageZoom image={vari} />\r\n                                            </div>\r\n                                        ) :\r\n                                        data.product.images.map((vari, index) =>\r\n                                            <div key={index}>\r\n                                                <ImageZoom image={vari} />\r\n                                            </div>\r\n                                        )}\r\n                                </Slider>\r\n                            </Col>\r\n                            <Col lg=\"6\" className=\"rtl-text\">\r\n                                <DetailsWithPrice symbol={symbol} item={data.product} changeColorVar={changeColorVar} navOne={state.nav1} addToCartClicked={addToCart} />\r\n                            </Col>\r\n                        </Row>\r\n                    }\r\n                </Container>\r\n            </div>\r\n        </section >\r\n    )\r\n}\r\n\r\nexport default LeftImagePage;"]},"metadata":{},"sourceType":"module"}