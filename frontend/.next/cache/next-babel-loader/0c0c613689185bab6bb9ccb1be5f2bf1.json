{"ast":null,"code":"var _jsxFileName = \"/home/gregorhammerschmittandrade/projetos/brindestar/webapp/frontend/pages/product-details/product/leftImagePage.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useContext, useState, useRef, useEffect } from \"react\";\nimport { Container, Row, Col, Media } from \"reactstrap\";\nimport DetailsWithPrice from \"../common/detail-price\";\nimport Slider from \"react-slick\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport CartContext from \"../../../helpers/cart\";\nimport ImageZoom from \"../common/image-zoom\";\nimport { CurrencyContext } from \"../../../helpers/Currency/CurrencyContext\";\nconst GET_SINGLE_PRODUCTS = gql`\n  query product($id: Int!) {\n    product(id: $id) {\n      id\n      title\n      description\n      type\n      brand\n      category\n      price\n      new\n      sale\n      discount\n      stock\n      variants {\n        id\n        color\n        image_id\n        variant_id\n        size\n      }\n      images {\n        image_id\n        src\n      }\n    }\n  }\n`;\n\nconst LeftImagePage = ({\n  pathId\n}) => {\n  const context = useContext(CartContext);\n  const addToCart = context.addToCart;\n  const curContext = useContext(CurrencyContext);\n  const symbol = curContext.state.symbol;\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    nav1: null,\n    nav2: null\n  });\n  const slider1 = useRef();\n  const slider2 = useRef();\n  var {\n    loading,\n    data\n  } = useQuery(GET_SINGLE_PRODUCTS, {\n    variables: {\n      id: parseInt(pathId)\n    }\n  });\n  var products = {\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    dots: false,\n    arrows: true,\n    fade: true,\n    infinite: false\n  };\n  var productsnav = {\n    slidesToShow: 3,\n    swipeToSlide: true,\n    arrows: false,\n    dots: false,\n    vertical: true,\n    focusOnSelect: true,\n    infinite: false\n  };\n  useEffect(() => {\n    setState({\n      nav1: slider1.current,\n      nav2: slider2.current\n    });\n  }, [data]);\n\n  const changeColorVar = img_id => {\n    slider2.current.slickGoTo(img_id);\n  };\n\n  const {\n    nav1,\n    nav2\n  } = state;\n  return __jsx(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"collection-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, !data || !data.product || data.product.length === 0 || loading ? \"loading\" : __jsx(Row, {\n    className: \"leftImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    lg: \"1\",\n    sm: \"2\",\n    xs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, __jsx(Slider, _extends({\n    className: \"slider-nav\"\n  }, productsnav, {\n    asNavFor: nav1,\n    ref: slider => slider2.current = slider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  }), data.product.variants ? data.product.images.map((vari, index) => __jsx(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 27\n    }\n  }, __jsx(Media, {\n    src: `${vari.src}`,\n    key: index,\n    alt: vari.alt,\n    className: \"img-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }))) : \"\"))), __jsx(Col, {\n    lg: \"5\",\n    sm: \"10\",\n    xs: \"12\",\n    className: \"order-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, __jsx(Slider, _extends({}, products, {\n    asNavFor: nav2,\n    ref: slider => slider1.current = slider,\n    className: \"product-right-slick\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }), data.product.variants ? data.product.images.map((vari, index) => __jsx(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }, __jsx(ImageZoom, {\n    image: vari,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 27\n    }\n  }))) : data.product.images.map((vari, index) => __jsx(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  }, __jsx(ImageZoom, {\n    image: vari,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 27\n    }\n  }))))), __jsx(Col, {\n    lg: \"6\",\n    className: \"rtl-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, __jsx(DetailsWithPrice, {\n    symbol: symbol,\n    item: data.product,\n    changeColorVar: changeColorVar,\n    navOne: state.nav1,\n    addToCartClicked: addToCart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nexport default LeftImagePage;","map":{"version":3,"sources":["/home/gregorhammerschmittandrade/projetos/brindestar/webapp/frontend/pages/product-details/product/leftImagePage.js"],"names":["React","useContext","useState","useRef","useEffect","Container","Row","Col","Media","DetailsWithPrice","Slider","gql","useQuery","CartContext","ImageZoom","CurrencyContext","GET_SINGLE_PRODUCTS","LeftImagePage","pathId","context","addToCart","curContext","symbol","state","setState","nav1","nav2","slider1","slider2","loading","data","variables","id","parseInt","products","slidesToShow","slidesToScroll","dots","arrows","fade","infinite","productsnav","swipeToSlide","vertical","focusOnSelect","current","changeColorVar","img_id","slickGoTo","product","length","slider","variants","images","map","vari","index","src","alt"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useRef, useEffect } from \"react\";\r\nimport { Container, Row, Col, Media } from \"reactstrap\";\r\nimport DetailsWithPrice from \"../common/detail-price\";\r\nimport Slider from \"react-slick\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport CartContext from \"../../../helpers/cart\";\r\nimport ImageZoom from \"../common/image-zoom\";\r\nimport { CurrencyContext } from \"../../../helpers/Currency/CurrencyContext\";\r\n\r\nconst GET_SINGLE_PRODUCTS = gql`\r\n  query product($id: Int!) {\r\n    product(id: $id) {\r\n      id\r\n      title\r\n      description\r\n      type\r\n      brand\r\n      category\r\n      price\r\n      new\r\n      sale\r\n      discount\r\n      stock\r\n      variants {\r\n        id\r\n        color\r\n        image_id\r\n        variant_id\r\n        size\r\n      }\r\n      images {\r\n        image_id\r\n        src\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst LeftImagePage = ({ pathId }) => {\r\n  const context = useContext(CartContext);\r\n  const addToCart = context.addToCart;\r\n  const curContext = useContext(CurrencyContext);\r\n  const symbol = curContext.state.symbol;\r\n  const [state, setState] = useState({ nav1: null, nav2: null });\r\n  const slider1 = useRef();\r\n  const slider2 = useRef();\r\n  var { loading, data } = useQuery(GET_SINGLE_PRODUCTS, {\r\n    variables: {\r\n      id: parseInt(pathId),\r\n    },\r\n  });\r\n  var products = {\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    dots: false,\r\n    arrows: true,\r\n    fade: true,\r\n    infinite: false,\r\n  };\r\n  var productsnav = {\r\n    slidesToShow: 3,\r\n    swipeToSlide: true,\r\n    arrows: false,\r\n    dots: false,\r\n    vertical: true,\r\n    focusOnSelect: true,\r\n    infinite: false,\r\n  };\r\n\r\n  useEffect(() => {\r\n    setState({\r\n      nav1: slider1.current,\r\n      nav2: slider2.current,\r\n    });\r\n  }, [data]);\r\n\r\n  const changeColorVar = (img_id) => {\r\n    slider2.current.slickGoTo(img_id);\r\n  };\r\n\r\n  const { nav1, nav2 } = state;\r\n\r\n  return (\r\n    <section>\r\n      <div className=\"collection-wrapper\">\r\n        <Container>\r\n          {!data || !data.product || data.product.length === 0 || loading ? (\r\n            \"loading\"\r\n          ) : (\r\n            <Row className=\"leftImage\">\r\n              <Col lg=\"1\" sm=\"2\" xs=\"12\">\r\n                <Row>\r\n                  <Slider\r\n                    className=\"slider-nav\"\r\n                    {...productsnav}\r\n                    asNavFor={nav1}\r\n                    ref={(slider) => (slider2.current = slider)}\r\n                  >\r\n                    {data.product.variants\r\n                      ? data.product.images.map((vari, index) => (\r\n                          <div key={index}>\r\n                            <Media\r\n                              src={`${vari.src}`}\r\n                              key={index}\r\n                              alt={vari.alt}\r\n                              className=\"img-fluid\"\r\n                            />\r\n                          </div>\r\n                        ))\r\n                      : \"\"}\r\n                  </Slider>\r\n                </Row>\r\n              </Col>\r\n              <Col lg=\"5\" sm=\"10\" xs=\"12\" className=\"order-up\">\r\n                <Slider\r\n                  {...products}\r\n                  asNavFor={nav2}\r\n                  ref={(slider) => (slider1.current = slider)}\r\n                  className=\"product-right-slick\"\r\n                >\r\n                  {data.product.variants\r\n                    ? data.product.images.map((vari, index) => (\r\n                        <div key={index}>\r\n                          <ImageZoom image={vari} />\r\n                        </div>\r\n                      ))\r\n                    : data.product.images.map((vari, index) => (\r\n                        <div key={index}>\r\n                          <ImageZoom image={vari} />\r\n                        </div>\r\n                      ))}\r\n                </Slider>\r\n              </Col>\r\n              <Col lg=\"6\" className=\"rtl-text\">\r\n                <DetailsWithPrice\r\n                  symbol={symbol}\r\n                  item={data.product}\r\n                  changeColorVar={changeColorVar}\r\n                  navOne={state.nav1}\r\n                  addToCartClicked={addToCart}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          )}\r\n        </Container>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default LeftImagePage;\r\n"]},"metadata":{},"sourceType":"module"}